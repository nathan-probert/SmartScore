[tool.poetry]
name = "smartScore"
version = "0.0.2"
description = ""
authors = ["Nathan Probert <nathanprobert@rogers.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12, <3.13"
requests = {extras = ["socks"], version = "^2.32.3"}
marshmallow = "^3.22.0"
boto3 = "^1.35.29"
aws-lambda-powertools = "^3.0.0"
pymongo = {extras = ["srv"], version = "^4.10.1"}
python-dotenv = "^1.0.1"
smartscore-info-client = {git = "https://github.com/nathan-probert/smartscore-info-client.git", rev = "v2.0.1"}
pytz = "^2024.2"
unidecode = "^1.3.8"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"
ruff = "^0.5.5"
pytest = "^8.2.2"
pandas = "^2.2.3"
maturin = "^1.8.2"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.9"

[tool.ruff]
exclude = ["**/__pycache__/*", "**/*.pyc", "output/*"]
indent-width = 4
target-version = "py312"
src = ["smartscore", "tests"]
line-length = 120

[tool.ruff.lint]
select = [
  "BLE",
  "E",
  "F",
  "I",
  "PL",
  "S",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "D",
  "S",
  "PLR2004",
  "ARG001",
]

[tool.ruff.lint.pylint]
max-args = 8

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
pythonpath = ["smartscore"]
testpaths = ["tests/unit"]

[build-system]
requires = ["maturin>=1.2"]
build-backend = "maturin"
